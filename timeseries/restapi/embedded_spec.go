// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Define and retrieve TimeSeries data for your devices.",
    "title": "API service for TimeSeries",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/timeseries/version": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Returns current api version.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/timeseries/{deviceId}": {
      "get": {
        "summary": "get timeseries data for a device by ID.",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "format": "uuid",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "query timeseries data by duration - 1s, 1m, 1h, 1d, 1w, 1M, 1y.",
            "name": "duration",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "timeseries data."
          },
          "400": {
            "description": "The specified device ID is invalid (e.g. not a number)."
          },
          "404": {
            "description": "A device with the specified ID was not found."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "summary": "push timeseries data from a device by ID.",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "format": "uuid",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "description": "timeseries data.",
            "name": "timeseries",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/timeseriesArray"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Timeseries was pushed."
          },
          "400": {
            "description": "The specified device ID is invalid (e.g. not a number)."
          },
          "404": {
            "description": "A device with the specified ID was not found."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
    "timeseries": {
      "type": "object",
      "required": [
        "timestamp",
        "property",
        "unit",
        "value"
      ],
      "properties": {
        "property": {
          "type": "string",
          "example": "temperature"
        },
        "timestamp": {
          "description": "Timestamp of the data points.",
          "type": "string",
          "format": "date-time",
          "example": "2017-07-21T17:32:28Z"
        },
        "unit": {
          "type": "string",
          "example": "celcius"
        },
        "value": {
          "type": "number",
          "format": "double",
          "example": 100.01
        }
      }
    },
    "timeseriesArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/timeseries"
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "X-API-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Define and retrieve TimeSeries data for your devices.",
    "title": "API service for TimeSeries",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/timeseries/version": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Returns current api version.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/timeseries/{deviceId}": {
      "get": {
        "summary": "get timeseries data for a device by ID.",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "format": "uuid",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "query timeseries data by duration - 1s, 1m, 1h, 1d, 1w, 1M, 1y.",
            "name": "duration",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "timeseries data."
          },
          "400": {
            "description": "The specified device ID is invalid (e.g. not a number)."
          },
          "404": {
            "description": "A device with the specified ID was not found."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "summary": "push timeseries data from a device by ID.",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "format": "uuid",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "description": "timeseries data.",
            "name": "timeseries",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/timeseriesArray"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Timeseries was pushed."
          },
          "400": {
            "description": "The specified device ID is invalid (e.g. not a number)."
          },
          "404": {
            "description": "A device with the specified ID was not found."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
    "timeseries": {
      "type": "object",
      "required": [
        "timestamp",
        "property",
        "unit",
        "value"
      ],
      "properties": {
        "property": {
          "type": "string",
          "example": "temperature"
        },
        "timestamp": {
          "description": "Timestamp of the data points.",
          "type": "string",
          "format": "date-time",
          "example": "2017-07-21T17:32:28Z"
        },
        "unit": {
          "type": "string",
          "example": "celcius"
        },
        "value": {
          "type": "number",
          "format": "double",
          "example": 100.01
        }
      }
    },
    "timeseriesArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/timeseries"
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "X-API-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}`))
}
